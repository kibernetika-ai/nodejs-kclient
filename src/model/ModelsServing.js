/**
 * Kibernetika project, backend component
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MlappUniversalServing', 'model/ModelsTaskFormElement', 'model/ModelsTaskFormElementStreamExtended'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MlappUniversalServing'), require('./ModelsTaskFormElement'), require('./ModelsTaskFormElementStreamExtended'));
  } else {
    // Browser globals (root is window)
    if (!root.KibernetikaProjectBackendComponent) {
      root.KibernetikaProjectBackendComponent = {};
    }
    root.KibernetikaProjectBackendComponent.ModelsServing = factory(root.KibernetikaProjectBackendComponent.ApiClient, root.KibernetikaProjectBackendComponent.MlappUniversalServing, root.KibernetikaProjectBackendComponent.ModelsTaskFormElement, root.KibernetikaProjectBackendComponent.ModelsTaskFormElementStreamExtended);
  }
}(this, function(ApiClient, MlappUniversalServing, ModelsTaskFormElement, ModelsTaskFormElementStreamExtended) {
  'use strict';




  /**
   * The ModelsServing model module.
   * @module model/ModelsServing
   * @version 0.2
   */

  /**
   * Constructs a new <code>ModelsServing</code>.
   * @alias module:model/ModelsServing
   * @class
   */
  var exports = function() {
    var _this = this;



































  };

  /**
   * Constructs a <code>ModelsServing</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelsServing} obj Optional instance to populate.
   * @return {module:model/ModelsServing} The populated <code>ModelsServing</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('InferenceValues')) {
        obj['InferenceValues'] = ApiClient.convertToType(data['InferenceValues'], Object);
      }
      if (data.hasOwnProperty('DisplayName')) {
        obj['DisplayName'] = ApiClient.convertToType(data['DisplayName'], 'String');
      }
      if (data.hasOwnProperty('UserDisplayName')) {
        obj['UserDisplayName'] = ApiClient.convertToType(data['UserDisplayName'], 'String');
      }
      if (data.hasOwnProperty('ClusterID')) {
        obj['ClusterID'] = ApiClient.convertToType(data['ClusterID'], 'String');
      }
      if (data.hasOwnProperty('Health')) {
        obj['Health'] = ApiClient.convertToType(data['Health'], 'String');
      }
      if (data.hasOwnProperty('Build')) {
        obj['Build'] = ApiClient.convertToType(data['Build'], 'String');
      }
      if (data.hasOwnProperty('UserID')) {
        obj['UserID'] = ApiClient.convertToType(data['UserID'], 'String');
      }
      if (data.hasOwnProperty('HealthError')) {
        obj['HealthError'] = ApiClient.convertToType(data['HealthError'], 'String');
      }
      if (data.hasOwnProperty('Config')) {
        obj['Config'] = MlappUniversalServing.constructFromObject(data['Config']);
      }
      if (data.hasOwnProperty('Status')) {
        obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
      }
      if (data.hasOwnProperty('InferenceName')) {
        obj['InferenceName'] = ApiClient.convertToType(data['InferenceName'], 'String');
      }
      if (data.hasOwnProperty('Description')) {
        obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
      }
      if (data.hasOwnProperty('Type')) {
        obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
      }
      if (data.hasOwnProperty('GPUUsed')) {
        obj['GPUUsed'] = ApiClient.convertToType(data['GPUUsed'], 'Number');
      }
      if (data.hasOwnProperty('ApplicationDisplayName')) {
        obj['ApplicationDisplayName'] = ApiClient.convertToType(data['ApplicationDisplayName'], 'String');
      }
      if (data.hasOwnProperty('InferenceVersion')) {
        obj['InferenceVersion'] = ApiClient.convertToType(data['InferenceVersion'], 'String');
      }
      if (data.hasOwnProperty('WorkspaceDisplayName')) {
        obj['WorkspaceDisplayName'] = ApiClient.convertToType(data['WorkspaceDisplayName'], 'String');
      }
      if (data.hasOwnProperty('UserLogin')) {
        obj['UserLogin'] = ApiClient.convertToType(data['UserLogin'], 'String');
      }
      if (data.hasOwnProperty('Gallery')) {
        obj['Gallery'] = ApiClient.convertToType(data['Gallery'], 'Boolean');
      }
      if (data.hasOwnProperty('ApplicationName')) {
        obj['ApplicationName'] = ApiClient.convertToType(data['ApplicationName'], 'String');
      }
      if (data.hasOwnProperty('InferenceForm')) {
        obj['InferenceForm'] = ApiClient.convertToType(data['InferenceForm'], [ModelsTaskFormElement]);
      }
      if (data.hasOwnProperty('Task')) {
        obj['Task'] = ApiClient.convertToType(data['Task'], 'String');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('Picture')) {
        obj['Picture'] = ApiClient.convertToType(data['Picture'], 'String');
      }
      if (data.hasOwnProperty('InnerAddress')) {
        obj['InnerAddress'] = ApiClient.convertToType(data['InnerAddress'], 'String');
      }
      if (data.hasOwnProperty('ContainersCount')) {
        obj['ContainersCount'] = ApiClient.convertToType(data['ContainersCount'], 'Number');
      }
      if (data.hasOwnProperty('InferenceStreams')) {
        obj['InferenceStreams'] = ApiClient.convertToType(data['InferenceStreams'], [ModelsTaskFormElementStreamExtended]);
      }
      if (data.hasOwnProperty('InferenceWorkspaceDisplayName')) {
        obj['InferenceWorkspaceDisplayName'] = ApiClient.convertToType(data['InferenceWorkspaceDisplayName'], 'String');
      }
      if (data.hasOwnProperty('ID')) {
        obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
      }
      if (data.hasOwnProperty('StatusMessage')) {
        obj['StatusMessage'] = ApiClient.convertToType(data['StatusMessage'], 'String');
      }
      if (data.hasOwnProperty('GalleryTags')) {
        obj['GalleryTags'] = ApiClient.convertToType(data['GalleryTags'], ['String']);
      }
      if (data.hasOwnProperty('Disabled')) {
        obj['Disabled'] = ApiClient.convertToType(data['Disabled'], 'Boolean');
      }
      if (data.hasOwnProperty('WorkspaceName')) {
        obj['WorkspaceName'] = ApiClient.convertToType(data['WorkspaceName'], 'String');
      }
      if (data.hasOwnProperty('InferenceWorkspaceName')) {
        obj['InferenceWorkspaceName'] = ApiClient.convertToType(data['InferenceWorkspaceName'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Object} InferenceValues
   */
  exports.prototype['InferenceValues'] = undefined;
  /**
   * @member {String} DisplayName
   */
  exports.prototype['DisplayName'] = undefined;
  /**
   * @member {String} UserDisplayName
   */
  exports.prototype['UserDisplayName'] = undefined;
  /**
   * @member {String} ClusterID
   */
  exports.prototype['ClusterID'] = undefined;
  /**
   * @member {String} Health
   */
  exports.prototype['Health'] = undefined;
  /**
   * @member {String} Build
   */
  exports.prototype['Build'] = undefined;
  /**
   * @member {String} UserID
   */
  exports.prototype['UserID'] = undefined;
  /**
   * @member {String} HealthError
   */
  exports.prototype['HealthError'] = undefined;
  /**
   * @member {module:model/MlappUniversalServing} Config
   */
  exports.prototype['Config'] = undefined;
  /**
   * @member {String} Status
   */
  exports.prototype['Status'] = undefined;
  /**
   * @member {String} InferenceName
   */
  exports.prototype['InferenceName'] = undefined;
  /**
   * @member {String} Description
   */
  exports.prototype['Description'] = undefined;
  /**
   * @member {String} Type
   */
  exports.prototype['Type'] = undefined;
  /**
   * @member {Number} GPUUsed
   */
  exports.prototype['GPUUsed'] = undefined;
  /**
   * @member {String} ApplicationDisplayName
   */
  exports.prototype['ApplicationDisplayName'] = undefined;
  /**
   * @member {String} InferenceVersion
   */
  exports.prototype['InferenceVersion'] = undefined;
  /**
   * @member {String} WorkspaceDisplayName
   */
  exports.prototype['WorkspaceDisplayName'] = undefined;
  /**
   * @member {String} UserLogin
   */
  exports.prototype['UserLogin'] = undefined;
  /**
   * @member {Boolean} Gallery
   */
  exports.prototype['Gallery'] = undefined;
  /**
   * @member {String} ApplicationName
   */
  exports.prototype['ApplicationName'] = undefined;
  /**
   * @member {Array.<module:model/ModelsTaskFormElement>} InferenceForm
   */
  exports.prototype['InferenceForm'] = undefined;
  /**
   * @member {String} Task
   */
  exports.prototype['Task'] = undefined;
  /**
   * @member {String} Name
   */
  exports.prototype['Name'] = undefined;
  /**
   * @member {String} Picture
   */
  exports.prototype['Picture'] = undefined;
  /**
   * @member {String} InnerAddress
   */
  exports.prototype['InnerAddress'] = undefined;
  /**
   * @member {Number} ContainersCount
   */
  exports.prototype['ContainersCount'] = undefined;
  /**
   * @member {Array.<module:model/ModelsTaskFormElementStreamExtended>} InferenceStreams
   */
  exports.prototype['InferenceStreams'] = undefined;
  /**
   * @member {String} InferenceWorkspaceDisplayName
   */
  exports.prototype['InferenceWorkspaceDisplayName'] = undefined;
  /**
   * @member {String} ID
   */
  exports.prototype['ID'] = undefined;
  /**
   * @member {String} StatusMessage
   */
  exports.prototype['StatusMessage'] = undefined;
  /**
   * @member {Array.<String>} GalleryTags
   */
  exports.prototype['GalleryTags'] = undefined;
  /**
   * @member {Boolean} Disabled
   */
  exports.prototype['Disabled'] = undefined;
  /**
   * @member {String} WorkspaceName
   */
  exports.prototype['WorkspaceName'] = undefined;
  /**
   * @member {String} InferenceWorkspaceName
   */
  exports.prototype['InferenceWorkspaceName'] = undefined;



  return exports;
}));


