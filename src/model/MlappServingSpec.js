/**
 * Kibernetika project, backend component
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MlappServingResponseParam', 'model/MlappServingSpecOptions', 'model/MlappServingSpecParam'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MlappServingResponseParam'), require('./MlappServingSpecOptions'), require('./MlappServingSpecParam'));
  } else {
    // Browser globals (root is window)
    if (!root.KibernetikaProjectBackendComponent) {
      root.KibernetikaProjectBackendComponent = {};
    }
    root.KibernetikaProjectBackendComponent.MlappServingSpec = factory(root.KibernetikaProjectBackendComponent.ApiClient, root.KibernetikaProjectBackendComponent.MlappServingResponseParam, root.KibernetikaProjectBackendComponent.MlappServingSpecOptions, root.KibernetikaProjectBackendComponent.MlappServingSpecParam);
  }
}(this, function(ApiClient, MlappServingResponseParam, MlappServingSpecOptions, MlappServingSpecParam) {
  'use strict';




  /**
   * The MlappServingSpec model module.
   * @module model/MlappServingSpec
   * @version 0.2
   */

  /**
   * Constructs a new <code>MlappServingSpec</code>.
   * @alias module:model/MlappServingSpec
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>MlappServingSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MlappServingSpec} obj Optional instance to populate.
   * @return {module:model/MlappServingSpec} The populated <code>MlappServingSpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('template')) {
        obj['template'] = ApiClient.convertToType(data['template'], 'String');
      }
      if (data.hasOwnProperty('outMimeType')) {
        obj['outMimeType'] = ApiClient.convertToType(data['outMimeType'], 'String');
      }
      if (data.hasOwnProperty('outFilter')) {
        obj['outFilter'] = ApiClient.convertToType(data['outFilter'], ['String']);
      }
      if (data.hasOwnProperty('response')) {
        obj['response'] = ApiClient.convertToType(data['response'], [MlappServingResponseParam]);
      }
      if (data.hasOwnProperty('params')) {
        obj['params'] = ApiClient.convertToType(data['params'], [MlappServingSpecParam]);
      }
      if (data.hasOwnProperty('rawInput')) {
        obj['rawInput'] = ApiClient.convertToType(data['rawInput'], 'Boolean');
      }
      if (data.hasOwnProperty('signature')) {
        obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
      }
      if (data.hasOwnProperty('model')) {
        obj['model'] = ApiClient.convertToType(data['model'], 'String');
      }
      if (data.hasOwnProperty('options')) {
        obj['options'] = MlappServingSpecOptions.constructFromObject(data['options']);
      }
    }
    return obj;
  }

  /**
   * @member {String} template
   */
  exports.prototype['template'] = undefined;
  /**
   * @member {String} outMimeType
   */
  exports.prototype['outMimeType'] = undefined;
  /**
   * @member {Array.<String>} outFilter
   */
  exports.prototype['outFilter'] = undefined;
  /**
   * @member {Array.<module:model/MlappServingResponseParam>} response
   */
  exports.prototype['response'] = undefined;
  /**
   * @member {Array.<module:model/MlappServingSpecParam>} params
   */
  exports.prototype['params'] = undefined;
  /**
   * @member {Boolean} rawInput
   */
  exports.prototype['rawInput'] = undefined;
  /**
   * @member {String} signature
   */
  exports.prototype['signature'] = undefined;
  /**
   * @member {String} model
   */
  exports.prototype['model'] = undefined;
  /**
   * @member {module:model/MlappServingSpecOptions} options
   */
  exports.prototype['options'] = undefined;



  return exports;
}));


